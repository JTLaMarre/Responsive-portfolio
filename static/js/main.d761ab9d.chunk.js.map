{"version":3,"sources":["components/Header.js","components/Footer.js","components/pages/Home.js","components/Project.js","components/pages/Portfolio.js","components/pages/Contact.js","components/pages/Error.js","components/pages/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Footer","home","src","alt","href","projects","name","img","deploy","Project","map","project","Portfolio","props","Contact","Error","Navigation","role","aria-label","aria-expanded","htmlFor","aria-hidden","type","id","to","App","path","component","Home","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d761ab9d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Header extends Component{\r\n\r\nrender(){\r\n    return(\r\n        <section className=\"hero is-dark\">\r\n      <div className=\"hero-head\">\r\n        <div className=\"hero-body\">\r\n        <div className=\"container has-text-centered\">\r\n            <p className=\"title\">\r\n                Jacob LaMarre\r\n            </p>\r\n            <p className=\"subtitle\">\r\n                full stack web developer\r\n            </p>\r\n        </div>\r\n    </div>\r\n    </div>\r\n      </section>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"content has-text-centered\">\r\n                    <p>\r\n                        <strong>Jacob T LaMarre</strong> \r\n                        </p>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer","import React, { Fragment } from 'react';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer'\r\n \r\nconst home = () => {\r\n    return (\r\n        <Fragment>\r\n      <Header />\r\n      <div className=\"columns is-centered\">\r\n    <div className=\"column is-one-quarter\">\r\n        <img src=\"../images/mePic.jpg\" alt=\"Me\"></img>\r\n    </div>\r\n    <div className=\"column is-half\">\r\n        <h2> my info</h2>\r\n        <p>Github:<a href=\"https://github.com/JTLaMarre\">my github profile</a></p>\r\n        <p>Linkedin:<a href=\"https://www.linkedin.com/in/jacob-lamarre-6b578629/\">my Linkedin</a></p>\r\n        <p>Hi! I'm Jacob, I am an aspiring web developer! I'm new to this but bring a fresh perspective having been a\r\n          pharmacy technician for the past 7 years. Working with different pharmacy systems has given me a mountain of\r\n          practice with problem solving and inputting data with minimal mistakes. In my free time I do a variety of\r\n          things from practicing martial arts to league of legends. I'm a very out going person and love going out\r\n          with friends and exploring new places.</p>\r\n    </div>\r\n</div>\r\n<Footer/>\r\n      </Fragment>\r\n    );\r\n}\r\n \r\nexport default home;","import React, { Component, Fragment } from 'react'\r\n\r\n\r\nconst projects = [\r\n    {\r\n        name: 'Pizza Tracker',\r\n        img: \"./images/Pizza.PNG\",\r\n        deploy: \"https://pizza--tracker.herokuapp.com/\"\r\n    },\r\n    {\r\n        name: 'TrailHeads',\r\n        img: \"./images/trailheads.PNG\",\r\n        deploy: \"https://lu-gflores.github.io/TrailHeads/\"\r\n    },\r\n    {\r\n        name: 'weatherDash',\r\n        img: \"./images/weatherdash.PNG\",\r\n        deploy: \"https://jtlamarre.github.io/Weather_dashboard/\"\r\n    },\r\n    {\r\n        name: 'Work Day Schedule',\r\n        img: \"./images/Work day scheduler.PNG\",\r\n        deploy: \"https://jtlamarre.github.io/Day_Planner/\"\r\n    },\r\n    {\r\n        name: 'Burger Game',\r\n        img: \"./images/Screenshot.PNG\",\r\n        deploy: \"https://sheltered-chamber-49316.herokuapp.com/\"\r\n    },\r\n    {\r\n        name: 'Employee Directory',\r\n        img: \"./images/EmployScreen1.PNG\",\r\n        deploy: \"https://jtlamarre.github.io/EmployeeDirectory/\"\r\n    },\r\n]\r\n\r\n\r\n\r\nclass Project extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            {projects.map((project)=>(\r\n\r\n            <div className=\" column is-one-quarter\">\r\n                <div className=\"box\">\r\n                    <img src={project.img} alt={project.name} className=\"project\"></img>\r\n                    <h1 className=\"is-size-3\">{project.name}</h1>\r\n                    <br></br>\r\n                    <a href={project.deploy}>Deployed Here</a>\r\n                </div>\r\n            </div>\r\n            ))}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Project","import React from 'react';\r\nimport Header from '../Header';\r\nimport Project from '../Project';\r\nimport Footer from '../Footer';\r\n\r\nconst Portfolio = (props) => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"columns is-multiline\">\r\n            <Project />\r\n         </div>\r\n         <Footer/>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React, { Fragment } from 'react';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\n \r\nconst Contact = () => {\r\n    return (\r\n      <Fragment>\r\n      <Header />\r\n         <div className=\"columns is-centered is multi-line\">\r\n        <div className=\"column is-6\">\r\n          <h1 className=\"is-size-1\">\r\n            Email: lordaufchaos@yahoo.com\r\n          </h1>\r\n          <h1 className=\"is-size-1\">\r\n            Phone: (980)-230-1816\r\n          </h1>\r\n          <h1 className=\"is-size-1\">\r\n            github: JTLaMarre\r\n          </h1>\r\n        </div>\r\n        </div>\r\n        <Footer />\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default Contact;","import React from 'react';\r\n \r\nconst Error = () => {\r\n    return (\r\n       <div>\r\n          <p>Error: Page does not exist!</p>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default Error;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n   return (\r\n      <div className=\"hero-head\">\r\n      <div className=\"navbar is-dark\">\r\n         <div className=\"container\">\r\n            <label\r\n               role=\"button\"\r\n               className=\"navbar-burger burger\"\r\n               aria-label=\"menu\"\r\n               aria-expanded=\"false\"\r\n               htmlFor=\"nav-toggle-state\"\r\n            >\r\n               <span aria-hidden=\"true\"></span>\r\n               <span aria-hidden=\"true\"></span>\r\n               <span aria-hidden=\"true\" ></span>\r\n            </label>\r\n               <input type=\"checkbox\" id=\"nav-toggle-state\"/>\r\n         </div>\r\n\r\n         <div className=\"navbar-menu\">\r\n\r\n            <div className=\"navbar-menu\">\r\n               <div className=\"navbar-start\">\r\n                  <NavLink className=\"navbar-item is-active\" to=\"/\">Home</NavLink>\r\n                  <NavLink className=\"navbar-item is-active\" to=\"/portfolio\">portfolio</NavLink>\r\n                  <NavLink className=\"navbar-item is-active\" to=\"/contact\">Contact</NavLink>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n \nimport Home from './components/pages/Home';\nimport Portfolio from './components/pages/Portfolio.js';\nimport Contact from './components/pages/Contact';\nimport Error from './components/pages/Error';\nimport Navigation from './components/pages/Navigation';\n \nclass App extends Component {\n  render() {\n    return ([      \n      \n       <BrowserRouter>\n        <div>\n          <Navigation />\n            <Switch>\n             <Route path=\"/\" component={Home} exact/>\n             <Route path=\"/portfolio\" component={Portfolio}/>\n             <Route path=\"/contact\" component={Contact}/>\n            <Route component={Error}/>\n           </Switch>\n        </div> \n      </BrowserRouter>,\n\n    ]\n    );\n  }\n}\n \nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}